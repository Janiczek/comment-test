name: Comment stuff

on:
  workflow_dispatch: {}
  issue_comment:
    types: [created]

jobs:
  update-snapshots:
    if: github.event.issue.pull_request && github.event.comment.body == '/hello'
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
      - name: Get branch of PR
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Post initial comment
        uses: actions/github-script@v7
        id: initial-comment
        with:
          script: |
            const timestamp = new Date().toISOString();
            const comment = await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `[${timestamp}] üîÑ WAIT...`
            });
            return comment.data.id;
      
      - name: Checkout PR branch ${{ steps.comment-branch.outputs.head_ref }}
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          touch a.txt
          git add a.txt
          git commit -m "Yo"
          git push
      
      - name: Update comment - Success with changes
        uses: actions/github-script@v7
        with:
          script: |
            const commentId = ${{ steps.initial-comment.outputs.result }};
            const timestamp = new Date().toISOString();
            const { data: comment } = await github.rest.issues.getComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: commentId
            });
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: commentId,
              body: comment.body + `\n[${timestamp}] ‚úÖ WORLDDDDDDDDDDDDD`
            });
      
      - name: Update comment - Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const commentId = ${{ steps.initial-comment.outputs.result }};
            const timestamp = new Date().toISOString();
            const { data: comment } = await github.rest.issues.getComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: commentId
            });
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: commentId,
              body: comment.body + `\n[${timestamp}] ‚ùå Something went wrong`
            });
